openapi: 3.0.3
info:
  title: E-commerce Backend API
  version: 1.0.0
  description: A production-ready e-commerce backend API
paths:
  /api/audit-logs/:
    get:
      operationId: audit_logs_list
      description: ViewSet for audit logs (admin only)
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - audit-logs
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAuditLogList'
          description: ''
  /api/audit-logs/{id}/:
    get:
      operationId: audit_logs_retrieve
      description: ViewSet for audit logs (admin only)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this audit log.
        required: true
      tags:
      - audit-logs
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLog'
          description: ''
  /api/audit-logs/user_actions/:
    get:
      operationId: audit_logs_user_actions_retrieve
      description: Get audit logs for a specific user
      tags:
      - audit-logs
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLog'
          description: ''
  /api/auth/jwt/create/:
    post:
      operationId: auth_jwt_create_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/auth/jwt/refresh/:
    post:
      operationId: auth_jwt_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/auth/jwt/verify/:
    post:
      operationId: auth_jwt_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerifyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerifyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerifyRequest'
        required: true
      responses:
        '200':
          description: No response body
  /api/auth/users/:
    get:
      operationId: auth_users_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: auth_users_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreatePasswordRetypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreatePasswordRetypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreatePasswordRetypeRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreatePasswordRetype'
          description: ''
  /api/auth/users/{id}/:
    get:
      operationId: auth_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: auth_users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: auth_users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: auth_users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/auth/users/activation/:
    post:
      operationId: auth_users_activation_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActivationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActivationRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activation'
          description: ''
  /api/auth/users/me/:
    get:
      operationId: auth_users_me_retrieve
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: auth_users_me_update
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: auth_users_me_partial_update
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: auth_users_me_destroy
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/auth/users/resend_activation/:
    post:
      operationId: auth_users_resend_activation_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/auth/users/reset_email/:
    post:
      operationId: auth_users_reset_email_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/auth/users/reset_email_confirm/:
    post:
      operationId: auth_users_reset_email_confirm_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirmRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirmRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirmRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
          description: ''
  /api/auth/users/reset_password/:
    post:
      operationId: auth_users_reset_password_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/auth/users/reset_password_confirm/:
    post:
      operationId: auth_users_reset_password_confirm_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
  /api/auth/users/set_email/:
    post:
      operationId: auth_users_set_email_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUsernameRetypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetUsernameRetypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetUsernameRetypeRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUsernameRetype'
          description: ''
  /api/auth/users/set_password/:
    post:
      operationId: auth_users_set_password_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPasswordRetypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetPasswordRetypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetPasswordRetypeRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPasswordRetype'
          description: ''
  /api/brands/:
    get:
      operationId: brands_list
      description: ViewSet for managing product brands
      parameters:
      - in: query
        name: is_active
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - brands
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBrandList'
          description: ''
    post:
      operationId: brands_create
      description: ViewSet for managing product brands
      tags:
      - brands
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrandRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BrandRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BrandRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
          description: ''
  /api/brands/{id}/:
    get:
      operationId: brands_retrieve
      description: ViewSet for managing product brands
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this brand.
        required: true
      tags:
      - brands
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
          description: ''
    put:
      operationId: brands_update
      description: ViewSet for managing product brands
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this brand.
        required: true
      tags:
      - brands
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrandRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BrandRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BrandRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
          description: ''
    patch:
      operationId: brands_partial_update
      description: ViewSet for managing product brands
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this brand.
        required: true
      tags:
      - brands
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBrandRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBrandRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBrandRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
          description: ''
    delete:
      operationId: brands_destroy
      description: ViewSet for managing product brands
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this brand.
        required: true
      tags:
      - brands
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/brands/{id}/products/:
    get:
      operationId: brands_products_retrieve
      description: Get all products for a brand
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this brand.
        required: true
      tags:
      - brands
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
          description: ''
  /api/categories/:
    get:
      operationId: categories_list
      description: ViewSet for managing product categories
      parameters:
      - in: query
        name: is_active
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: parent
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - categories
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCategoryList'
          description: ''
    post:
      operationId: categories_create
      description: ViewSet for managing product categories
      tags:
      - categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /api/categories/{id}/:
    get:
      operationId: categories_retrieve
      description: ViewSet for managing product categories
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - categories
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    put:
      operationId: categories_update
      description: ViewSet for managing product categories
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    patch:
      operationId: categories_partial_update
      description: ViewSet for managing product categories
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategoryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategoryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategoryRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    delete:
      operationId: categories_destroy
      description: ViewSet for managing product categories
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - categories
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/categories/{id}/products/:
    get:
      operationId: categories_products_retrieve
      description: Get all products in a category
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - categories
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /api/categories/{id}/subcategories/:
    get:
      operationId: categories_subcategories_retrieve
      description: Get all subcategories of a category
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - categories
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /api/customer-profiles/:
    get:
      operationId: customer_profiles_list
      description: ViewSet for customer profile management
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - customer-profiles
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCustomerProfileList'
          description: ''
    post:
      operationId: customer_profiles_create
      description: ViewSet for customer profile management
      tags:
      - customer-profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerProfileRequest'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerProfile'
          description: ''
  /api/customer-profiles/{id}/:
    get:
      operationId: customer_profiles_retrieve
      description: ViewSet for customer profile management
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - customer-profiles
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerProfile'
          description: ''
    put:
      operationId: customer_profiles_update
      description: ViewSet for customer profile management
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - customer-profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerProfileRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerProfile'
          description: ''
    patch:
      operationId: customer_profiles_partial_update
      description: ViewSet for customer profile management
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - customer-profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomerProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomerProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomerProfileRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerProfile'
          description: ''
    delete:
      operationId: customer_profiles_destroy
      description: ViewSet for customer profile management
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - customer-profiles
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/phone-verification/:
    post:
      operationId: phone_verification_create
      description: View for sending and verifying phone verification codes
      tags:
      - phone-verification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhoneVerificationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PhoneVerificationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PhoneVerificationRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneVerification'
          description: ''
  /api/product-images/:
    get:
      operationId: product_images_list
      description: ViewSet for managing product images
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - product-images
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductImageList'
          description: ''
    post:
      operationId: product_images_create
      description: ViewSet for managing product images
      tags:
      - product-images
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductImageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductImageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductImageRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductImage'
          description: ''
  /api/product-images/{id}/:
    get:
      operationId: product_images_retrieve
      description: ViewSet for managing product images
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product image.
        required: true
      tags:
      - product-images
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductImage'
          description: ''
    put:
      operationId: product_images_update
      description: ViewSet for managing product images
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product image.
        required: true
      tags:
      - product-images
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductImageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductImageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductImageRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductImage'
          description: ''
    patch:
      operationId: product_images_partial_update
      description: ViewSet for managing product images
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product image.
        required: true
      tags:
      - product-images
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductImageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductImageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductImageRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductImage'
          description: ''
    delete:
      operationId: product_images_destroy
      description: ViewSet for managing product images
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product image.
        required: true
      tags:
      - product-images
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/product-specifications/:
    get:
      operationId: product_specifications_list
      description: ViewSet for managing product specifications
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - product-specifications
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductSpecificationList'
          description: ''
    post:
      operationId: product_specifications_create
      description: ViewSet for managing product specifications
      tags:
      - product-specifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductSpecificationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductSpecificationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductSpecificationRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSpecification'
          description: ''
  /api/product-specifications/{id}/:
    get:
      operationId: product_specifications_retrieve
      description: ViewSet for managing product specifications
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product specification.
        required: true
      tags:
      - product-specifications
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSpecification'
          description: ''
    put:
      operationId: product_specifications_update
      description: ViewSet for managing product specifications
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product specification.
        required: true
      tags:
      - product-specifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductSpecificationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductSpecificationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductSpecificationRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSpecification'
          description: ''
    patch:
      operationId: product_specifications_partial_update
      description: ViewSet for managing product specifications
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product specification.
        required: true
      tags:
      - product-specifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductSpecificationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductSpecificationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductSpecificationRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSpecification'
          description: ''
    delete:
      operationId: product_specifications_destroy
      description: ViewSet for managing product specifications
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product specification.
        required: true
      tags:
      - product-specifications
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/product-variants/:
    get:
      operationId: product_variants_list
      description: ViewSet for managing product variants
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - product-variants
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductVariantList'
          description: ''
    post:
      operationId: product_variants_create
      description: ViewSet for managing product variants
      tags:
      - product-variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductVariantRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductVariantRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductVariantRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductVariant'
          description: ''
  /api/product-variants/{id}/:
    get:
      operationId: product_variants_retrieve
      description: ViewSet for managing product variants
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product variant.
        required: true
      tags:
      - product-variants
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductVariant'
          description: ''
    put:
      operationId: product_variants_update
      description: ViewSet for managing product variants
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product variant.
        required: true
      tags:
      - product-variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductVariantRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductVariantRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductVariantRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductVariant'
          description: ''
    patch:
      operationId: product_variants_partial_update
      description: ViewSet for managing product variants
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product variant.
        required: true
      tags:
      - product-variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductVariantRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductVariantRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductVariantRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductVariant'
          description: ''
    delete:
      operationId: product_variants_destroy
      description: ViewSet for managing product variants
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product variant.
        required: true
      tags:
      - product-variants
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/products/:
    get:
      operationId: products_list
      description: ViewSet for managing products
      parameters:
      - in: query
        name: brand
        schema:
          type: integer
      - in: query
        name: category
        schema:
          type: integer
      - in: query
        name: condition
        schema:
          type: string
          enum:
          - new
          - refurbished
          - used
        description: |-
          * `new` - New
          * `used` - Used
          * `refurbished` - Refurbished
      - in: query
        name: is_featured
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - active
          - deleted
          - draft
          - inactive
        description: |-
          * `draft` - Draft
          * `active` - Active
          * `inactive` - Inactive
          * `deleted` - Deleted
      - in: query
        name: vendor
        schema:
          type: integer
      tags:
      - products
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductList'
          description: ''
    post:
      operationId: products_create
      description: ViewSet for managing products
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductCreateRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCreate'
          description: ''
  /api/products/{id}/:
    get:
      operationId: products_retrieve
      description: ViewSet for managing products
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: products_update
      description: ViewSet for managing products
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: products_partial_update
      description: ViewSet for managing products
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: products_destroy
      description: ViewSet for managing products
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/products/{id}/add_image/:
    post:
      operationId: products_add_image_create
      description: Add an image to a product (owner only)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/products/{id}/add_review/:
    post:
      operationId: products_add_review_create
      description: Add a review to a product
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/products/featured/:
    get:
      operationId: products_featured_retrieve
      description: Get featured products
      tags:
      - products
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/products/low_stock/:
    get:
      operationId: products_low_stock_retrieve
      description: Get products with low stock (vendor only)
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/products/on_sale/:
    get:
      operationId: products_on_sale_retrieve
      description: Get products on sale
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/reviews/:
    get:
      operationId: reviews_list
      description: ViewSet for managing product reviews
      parameters:
      - in: query
        name: is_verified_purchase
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: product
        schema:
          type: integer
      - in: query
        name: rating
        schema:
          type: integer
      tags:
      - reviews
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductReviewList'
          description: ''
    post:
      operationId: reviews_create
      description: ViewSet for managing product reviews
      tags:
      - reviews
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductReviewRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductReviewRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductReviewRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductReview'
          description: ''
  /api/reviews/{id}/:
    get:
      operationId: reviews_retrieve
      description: ViewSet for managing product reviews
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product review.
        required: true
      tags:
      - reviews
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductReview'
          description: ''
    put:
      operationId: reviews_update
      description: ViewSet for managing product reviews
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product review.
        required: true
      tags:
      - reviews
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductReviewRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductReviewRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductReviewRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductReview'
          description: ''
    patch:
      operationId: reviews_partial_update
      description: ViewSet for managing product reviews
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product review.
        required: true
      tags:
      - reviews
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductReviewRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductReviewRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductReviewRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductReview'
          description: ''
    delete:
      operationId: reviews_destroy
      description: ViewSet for managing product reviews
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product review.
        required: true
      tags:
      - reviews
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/reviews/{id}/approve/:
    post:
      operationId: reviews_approve_create
      description: Approve a review (admin only)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product review.
        required: true
      tags:
      - reviews
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductReviewRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductReviewRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductReviewRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductReview'
          description: ''
  /api/reviews/{id}/reject/:
    post:
      operationId: reviews_reject_create
      description: Reject a review (admin only)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product review.
        required: true
      tags:
      - reviews
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductReviewRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductReviewRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductReviewRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductReview'
          description: ''
  /api/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - en
          - es
          - fr
      tags:
      - schema
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/tags/:
    get:
      operationId: tags_list
      description: ViewSet for managing product tags
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - tags
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductTagList'
          description: ''
    post:
      operationId: tags_create
      description: ViewSet for managing product tags
      tags:
      - tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductTagRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductTagRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductTagRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductTag'
          description: ''
  /api/tags/{id}/:
    get:
      operationId: tags_retrieve
      description: ViewSet for managing product tags
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product tag.
        required: true
      tags:
      - tags
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductTag'
          description: ''
    put:
      operationId: tags_update
      description: ViewSet for managing product tags
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product tag.
        required: true
      tags:
      - tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductTagRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductTagRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductTagRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductTag'
          description: ''
    patch:
      operationId: tags_partial_update
      description: ViewSet for managing product tags
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product tag.
        required: true
      tags:
      - tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductTagRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductTagRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductTagRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductTag'
          description: ''
    delete:
      operationId: tags_destroy
      description: ViewSet for managing product tags
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product tag.
        required: true
      tags:
      - tags
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/tags/{id}/products/:
    get:
      operationId: tags_products_retrieve
      description: Get all products with this tag
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product tag.
        required: true
      tags:
      - tags
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductTag'
          description: ''
  /api/two-factor/:
    post:
      operationId: two_factor_create
      description: View for two-factor authentication
      tags:
      - two-factor
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/users/:
    get:
      operationId: users_list
      description: ViewSet for user management
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: users_create
      description: ViewSet for user management
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
  /api/users/{id}/:
    get:
      operationId: users_retrieve
      description: ViewSet for user management
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_update
      description: ViewSet for user management
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_partial_update
      description: ViewSet for user management
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: users_destroy
      description: ViewSet for user management
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/users/{id}/approve/:
    post:
      operationId: users_approve_create
      description: Approve a user (admin only)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/{id}/change_role/:
    post:
      operationId: users_change_role_create
      description: Change user role (admin only)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/{id}/deactivate/:
    post:
      operationId: users_deactivate_create
      description: Deactivate a user (admin only)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/me/:
    get:
      operationId: users_me_retrieve
      description: Get current user details
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/vendor-profiles/:
    get:
      operationId: vendor_profiles_list
      description: ViewSet for vendor profile management
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - vendor-profiles
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVendorProfileList'
          description: ''
    post:
      operationId: vendor_profiles_create
      description: ViewSet for vendor profile management
      tags:
      - vendor-profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VendorProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VendorProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VendorProfileRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorProfile'
          description: ''
  /api/vendor-profiles/{id}/:
    get:
      operationId: vendor_profiles_retrieve
      description: ViewSet for vendor profile management
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - vendor-profiles
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorProfile'
          description: ''
    put:
      operationId: vendor_profiles_update
      description: ViewSet for vendor profile management
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - vendor-profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VendorProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VendorProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VendorProfileRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorProfile'
          description: ''
    patch:
      operationId: vendor_profiles_partial_update
      description: ViewSet for vendor profile management
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - vendor-profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVendorProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVendorProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVendorProfileRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorProfile'
          description: ''
    delete:
      operationId: vendor_profiles_destroy
      description: ViewSet for vendor profile management
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - vendor-profiles
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/vendor-profiles/{id}/approve/:
    post:
      operationId: vendor_profiles_approve_create
      description: Approve a vendor (admin only)
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - vendor-profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VendorProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VendorProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VendorProfileRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorProfile'
          description: ''
components:
  schemas:
    ActionEnum:
      enum:
      - login
      - logout
      - register
      - password_change
      - profile_update
      - user_deactivate
      - user_activate
      - role_change
      type: string
      description: |-
        * `login` - Login
        * `logout` - Logout
        * `register` - Register
        * `password_change` - Password Change
        * `profile_update` - Profile Update
        * `user_deactivate` - User Deactivate
        * `user_activate` - User Activate
        * `role_change` - Role Change
    Activation:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
      required:
      - token
      - uid
    ActivationRequest:
      type: object
      properties:
        uid:
          type: string
          minLength: 1
        token:
          type: string
          minLength: 1
      required:
      - token
      - uid
    AuditLog:
      type: object
      description: Serializer for audit logs
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        action:
          allOf:
          - $ref: '#/components/schemas/ActionEnum'
          readOnly: true
        ip_address:
          type: string
          readOnly: true
          nullable: true
        user_agent:
          type: string
          readOnly: true
          nullable: true
        details:
          type: object
          additionalProperties: {}
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - action
      - created_at
      - details
      - id
      - ip_address
      - user
      - user_agent
    Brand:
      type: object
      description: Serializer for brands
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        slug:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
        logo:
          type: string
          format: uri
          nullable: true
        website:
          type: string
          format: uri
          maxLength: 200
        is_active:
          type: boolean
        product_count:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - name
      - product_count
      - slug
      - updated_at
    BrandRequest:
      type: object
      description: Serializer for brands
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
        logo:
          type: string
          format: binary
          nullable: true
        website:
          type: string
          format: uri
          maxLength: 200
        is_active:
          type: boolean
      required:
      - name
    Category:
      type: object
      description: Serializer for categories
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        slug:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
        image:
          type: string
          format: uri
          nullable: true
        parent:
          type: integer
          nullable: true
        is_active:
          type: boolean
        children:
          type: string
          readOnly: true
        product_count:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - children
      - created_at
      - id
      - name
      - product_count
      - slug
      - updated_at
    CategoryRequest:
      type: object
      description: Serializer for categories
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
        image:
          type: string
          format: binary
          nullable: true
        parent:
          type: integer
          nullable: true
        is_active:
          type: boolean
      required:
      - name
    ConditionEnum:
      enum:
      - new
      - used
      - refurbished
      type: string
      description: |-
        * `new` - New
        * `used` - Used
        * `refurbished` - Refurbished
    CustomerProfile:
      type: object
      description: Serializer for customer profile
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        date_of_birth:
          type: string
          format: date
          nullable: true
        shipping_address:
          type: string
          nullable: true
        billing_address:
          type: string
          nullable: true
        preferences:
          type: object
          additionalProperties: {}
      required:
      - id
      - user
    CustomerProfileRequest:
      type: object
      description: Serializer for customer profile
      properties:
        date_of_birth:
          type: string
          format: date
          nullable: true
        shipping_address:
          type: string
          nullable: true
        billing_address:
          type: string
          nullable: true
        preferences:
          type: object
          additionalProperties: {}
    PaginatedAuditLogList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AuditLog'
    PaginatedBrandList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Brand'
    PaginatedCategoryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Category'
    PaginatedCustomerProfileList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CustomerProfile'
    PaginatedProductImageList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductImage'
    PaginatedProductList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    PaginatedProductReviewList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductReview'
    PaginatedProductSpecificationList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductSpecification'
    PaginatedProductTagList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductTag'
    PaginatedProductVariantList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductVariant'
    PaginatedUserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PaginatedVendorProfileList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/VendorProfile'
    PasswordResetConfirm:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
      required:
      - new_password
      - token
      - uid
    PasswordResetConfirmRequest:
      type: object
      properties:
        uid:
          type: string
          minLength: 1
        token:
          type: string
          minLength: 1
        new_password:
          type: string
          minLength: 1
      required:
      - new_password
      - token
      - uid
    PatchedBrandRequest:
      type: object
      description: Serializer for brands
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
        logo:
          type: string
          format: binary
          nullable: true
        website:
          type: string
          format: uri
          maxLength: 200
        is_active:
          type: boolean
    PatchedCategoryRequest:
      type: object
      description: Serializer for categories
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
        image:
          type: string
          format: binary
          nullable: true
        parent:
          type: integer
          nullable: true
        is_active:
          type: boolean
    PatchedCustomerProfileRequest:
      type: object
      description: Serializer for customer profile
      properties:
        date_of_birth:
          type: string
          format: date
          nullable: true
        shipping_address:
          type: string
          nullable: true
        billing_address:
          type: string
          nullable: true
        preferences:
          type: object
          additionalProperties: {}
    PatchedProductImageRequest:
      type: object
      description: Serializer for product images
      properties:
        image:
          type: string
          format: binary
        alt_text:
          type: string
          maxLength: 200
        is_primary:
          type: boolean
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
    PatchedProductRequest:
      type: object
      description: Serializer for products with nested relationships
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 200
        description:
          type: string
          minLength: 1
        short_description:
          type: string
          maxLength: 500
        base_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        sale_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        stock_quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        low_stock_threshold:
          type: integer
          maximum: 2147483647
          minimum: 0
        condition:
          $ref: '#/components/schemas/ConditionEnum'
        weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
          nullable: true
        dimensions:
          type: object
          additionalProperties: {}
        status:
          $ref: '#/components/schemas/StatusEnum'
        is_featured:
          type: boolean
        is_active:
          type: boolean
        meta_title:
          type: string
          maxLength: 200
        meta_description:
          type: string
        meta_keywords:
          type: string
          maxLength: 500
    PatchedProductReviewRequest:
      type: object
      description: Serializer for product reviews
      properties:
        product:
          type: integer
        rating:
          type: integer
          maximum: 5
          minimum: 1
        title:
          type: string
          minLength: 1
          maxLength: 200
        comment:
          type: string
          minLength: 1
    PatchedProductSpecificationRequest:
      type: object
      description: Serializer for product specifications
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        value:
          type: string
          minLength: 1
          maxLength: 500
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
    PatchedProductTagRequest:
      type: object
      description: Serializer for product tags
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
    PatchedProductVariantRequest:
      type: object
      description: Serializer for product variants
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        sku:
          type: string
          minLength: 1
          maxLength: 100
        price_adjustment:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        stock_quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        is_active:
          type: boolean
    PatchedUserRequest:
      type: object
      description: Serializer for user details
      properties:
        phone_number:
          type: string
          minLength: 1
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        first_name:
          type: string
          minLength: 1
          maxLength: 30
        last_name:
          type: string
          minLength: 1
          maxLength: 30
    PatchedVendorProfileRequest:
      type: object
      description: Serializer for vendor profile
      properties:
        company_name:
          type: string
          minLength: 1
          maxLength: 100
        business_address:
          type: string
          minLength: 1
        tax_id:
          type: string
          nullable: true
          maxLength: 50
        business_license:
          type: string
          nullable: true
          maxLength: 100
    PhoneVerification:
      type: object
      description: Serializer for phone verification
      properties:
        code:
          type: string
          maxLength: 6
      required:
      - code
    PhoneVerificationRequest:
      type: object
      description: Serializer for phone verification
      properties:
        code:
          type: string
          minLength: 1
          maxLength: 6
      required:
      - code
    Product:
      type: object
      description: Serializer for products with nested relationships
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        slug:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
        short_description:
          type: string
          maxLength: 500
        vendor:
          type: string
          format: email
          readOnly: true
        category:
          allOf:
          - $ref: '#/components/schemas/Category'
          readOnly: true
        brand:
          allOf:
          - $ref: '#/components/schemas/Brand'
          readOnly: true
        base_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        sale_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        current_price:
          type: string
          readOnly: true
        discount_percentage:
          type: string
          readOnly: true
        is_on_sale:
          type: string
          readOnly: true
        sku:
          type: string
          readOnly: true
        stock_quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        low_stock_threshold:
          type: integer
          maximum: 2147483647
          minimum: 0
        is_low_stock:
          type: string
          readOnly: true
        is_out_of_stock:
          type: string
          readOnly: true
        condition:
          $ref: '#/components/schemas/ConditionEnum'
        weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
          nullable: true
        dimensions:
          type: object
          additionalProperties: {}
        status:
          $ref: '#/components/schemas/StatusEnum'
        is_featured:
          type: boolean
        is_active:
          type: boolean
        meta_title:
          type: string
          maxLength: 200
        meta_description:
          type: string
        meta_keywords:
          type: string
          maxLength: 500
        images:
          type: array
          items:
            $ref: '#/components/schemas/ProductImage'
          readOnly: true
        variants:
          type: array
          items:
            $ref: '#/components/schemas/ProductVariant'
          readOnly: true
        specifications:
          type: array
          items:
            $ref: '#/components/schemas/ProductSpecification'
          readOnly: true
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/ProductReview'
          readOnly: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/ProductTag'
          readOnly: true
        average_rating:
          type: string
          readOnly: true
        review_count:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        published_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - average_rating
      - base_price
      - brand
      - category
      - created_at
      - current_price
      - description
      - discount_percentage
      - id
      - images
      - is_low_stock
      - is_on_sale
      - is_out_of_stock
      - name
      - published_at
      - review_count
      - reviews
      - sku
      - slug
      - specifications
      - tags
      - updated_at
      - variants
      - vendor
    ProductCreate:
      type: object
      description: Serializer for creating products
      properties:
        name:
          type: string
          maxLength: 200
        description:
          type: string
        short_description:
          type: string
          maxLength: 500
        category:
          type: integer
        brand:
          type: integer
          nullable: true
        base_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        sale_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        stock_quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        low_stock_threshold:
          type: integer
          maximum: 2147483647
          minimum: 0
        condition:
          $ref: '#/components/schemas/ConditionEnum'
        weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
          nullable: true
        dimensions:
          type: object
          additionalProperties: {}
        status:
          $ref: '#/components/schemas/StatusEnum'
        is_featured:
          type: boolean
        meta_title:
          type: string
          maxLength: 200
        meta_description:
          type: string
        meta_keywords:
          type: string
          maxLength: 500
      required:
      - base_price
      - category
      - description
      - name
    ProductCreateRequest:
      type: object
      description: Serializer for creating products
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 200
        description:
          type: string
          minLength: 1
        short_description:
          type: string
          maxLength: 500
        category:
          type: integer
        brand:
          type: integer
          nullable: true
        base_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        sale_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        stock_quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        low_stock_threshold:
          type: integer
          maximum: 2147483647
          minimum: 0
        condition:
          $ref: '#/components/schemas/ConditionEnum'
        weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
          nullable: true
        dimensions:
          type: object
          additionalProperties: {}
        status:
          $ref: '#/components/schemas/StatusEnum'
        is_featured:
          type: boolean
        meta_title:
          type: string
          maxLength: 200
        meta_description:
          type: string
        meta_keywords:
          type: string
          maxLength: 500
      required:
      - base_price
      - category
      - description
      - name
    ProductImage:
      type: object
      description: Serializer for product images
      properties:
        id:
          type: integer
          readOnly: true
        image:
          type: string
          format: uri
        alt_text:
          type: string
          maxLength: 200
        is_primary:
          type: boolean
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - image
    ProductImageRequest:
      type: object
      description: Serializer for product images
      properties:
        image:
          type: string
          format: binary
        alt_text:
          type: string
          maxLength: 200
        is_primary:
          type: boolean
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
      - image
    ProductRequest:
      type: object
      description: Serializer for products with nested relationships
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 200
        description:
          type: string
          minLength: 1
        short_description:
          type: string
          maxLength: 500
        base_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        sale_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        stock_quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        low_stock_threshold:
          type: integer
          maximum: 2147483647
          minimum: 0
        condition:
          $ref: '#/components/schemas/ConditionEnum'
        weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
          nullable: true
        dimensions:
          type: object
          additionalProperties: {}
        status:
          $ref: '#/components/schemas/StatusEnum'
        is_featured:
          type: boolean
        is_active:
          type: boolean
        meta_title:
          type: string
          maxLength: 200
        meta_description:
          type: string
        meta_keywords:
          type: string
          maxLength: 500
      required:
      - base_price
      - description
      - name
    ProductReview:
      type: object
      description: Serializer for product reviews
      properties:
        id:
          type: integer
          readOnly: true
        product:
          type: integer
        user:
          type: string
          format: email
          readOnly: true
        user_full_name:
          type: string
          readOnly: true
        rating:
          type: integer
          maximum: 5
          minimum: 1
        title:
          type: string
          maxLength: 200
        comment:
          type: string
        is_verified_purchase:
          type: boolean
          readOnly: true
        is_approved:
          type: boolean
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - comment
      - created_at
      - id
      - is_approved
      - is_verified_purchase
      - product
      - rating
      - title
      - updated_at
      - user
      - user_full_name
    ProductReviewRequest:
      type: object
      description: Serializer for product reviews
      properties:
        product:
          type: integer
        rating:
          type: integer
          maximum: 5
          minimum: 1
        title:
          type: string
          minLength: 1
          maxLength: 200
        comment:
          type: string
          minLength: 1
      required:
      - comment
      - product
      - rating
      - title
    ProductSpecification:
      type: object
      description: Serializer for product specifications
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        value:
          type: string
          maxLength: 500
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
      - id
      - name
      - value
    ProductSpecificationRequest:
      type: object
      description: Serializer for product specifications
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        value:
          type: string
          minLength: 1
          maxLength: 500
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
      - name
      - value
    ProductTag:
      type: object
      description: Serializer for product tags
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        slug:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - name
      - slug
    ProductTagRequest:
      type: object
      description: Serializer for product tags
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
      required:
      - name
    ProductVariant:
      type: object
      description: Serializer for product variants
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        sku:
          type: string
          maxLength: 100
        price_adjustment:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        stock_quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        is_active:
          type: boolean
        current_price:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - current_price
      - id
      - name
      - sku
    ProductVariantRequest:
      type: object
      description: Serializer for product variants
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        sku:
          type: string
          minLength: 1
          maxLength: 100
        price_adjustment:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        stock_quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        is_active:
          type: boolean
      required:
      - name
      - sku
    RoleEnum:
      enum:
      - admin
      - vendor
      - customer
      type: string
      description: |-
        * `admin` - Admin
        * `vendor` - Vendor
        * `customer` - Customer
    SendEmailReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    SendEmailResetRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
      required:
      - email
    SetPasswordRetype:
      type: object
      properties:
        new_password:
          type: string
        re_new_password:
          type: string
        current_password:
          type: string
      required:
      - current_password
      - new_password
      - re_new_password
    SetPasswordRetypeRequest:
      type: object
      properties:
        new_password:
          type: string
          minLength: 1
        re_new_password:
          type: string
          minLength: 1
        current_password:
          type: string
          minLength: 1
      required:
      - current_password
      - new_password
      - re_new_password
    SetUsernameRetype:
      type: object
      properties:
        current_password:
          type: string
        new_email:
          type: string
          format: email
          title: Email
          maxLength: 254
        re_new_email:
          type: string
      required:
      - current_password
      - new_email
      - re_new_email
    SetUsernameRetypeRequest:
      type: object
      properties:
        current_password:
          type: string
          minLength: 1
        new_email:
          type: string
          format: email
          minLength: 1
          title: Email
          maxLength: 254
        re_new_email:
          type: string
          minLength: 1
      required:
      - current_password
      - new_email
      - re_new_email
    StatusEnum:
      enum:
      - draft
      - active
      - inactive
      - deleted
      type: string
      description: |-
        * `draft` - Draft
        * `active` - Active
        * `inactive` - Inactive
        * `deleted` - Deleted
    TokenObtainPair:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - refresh
    TokenObtainPairRequest:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - email
      - password
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
      required:
      - access
    TokenRefreshRequest:
      type: object
      properties:
        refresh:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - refresh
    TokenVerifyRequest:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - token
    User:
      type: object
      description: Serializer for user details
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
        phone_number:
          type: string
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 30
        full_name:
          type: string
          readOnly: true
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          readOnly: true
        is_active:
          type: boolean
          readOnly: true
        is_verified:
          type: boolean
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - email
      - first_name
      - full_name
      - id
      - is_active
      - is_verified
      - last_name
      - phone_number
      - role
    UserCreate:
      type: object
      description: Serializer for user registration with jsonschema validation
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        phone_number:
          type: string
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 30
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          default: customer
      required:
      - email
      - first_name
      - id
      - last_name
      - phone_number
    UserCreatePasswordRetype:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 30
        phone_number:
          type: string
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        email:
          type: string
          format: email
          maxLength: 254
        id:
          type: integer
          readOnly: true
        re_password:
          type: string
      required:
      - email
      - first_name
      - id
      - last_name
      - phone_number
      - re_password
    UserCreatePasswordRetypeRequest:
      type: object
      properties:
        first_name:
          type: string
          minLength: 1
          maxLength: 30
        last_name:
          type: string
          minLength: 1
          maxLength: 30
        phone_number:
          type: string
          minLength: 1
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        password:
          type: string
          writeOnly: true
          minLength: 1
        re_password:
          type: string
          minLength: 1
      required:
      - email
      - first_name
      - last_name
      - password
      - phone_number
      - re_password
    UserCreateRequest:
      type: object
      description: Serializer for user registration with jsonschema validation
      properties:
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        phone_number:
          type: string
          minLength: 1
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        first_name:
          type: string
          minLength: 1
          maxLength: 30
        last_name:
          type: string
          minLength: 1
          maxLength: 30
        password:
          type: string
          writeOnly: true
          minLength: 1
          maxLength: 128
        password_retype:
          type: string
          writeOnly: true
          minLength: 1
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          default: customer
      required:
      - email
      - first_name
      - last_name
      - password
      - password_retype
      - phone_number
    UserRequest:
      type: object
      description: Serializer for user details
      properties:
        phone_number:
          type: string
          minLength: 1
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        first_name:
          type: string
          minLength: 1
          maxLength: 30
        last_name:
          type: string
          minLength: 1
          maxLength: 30
      required:
      - first_name
      - last_name
      - phone_number
    UsernameResetConfirm:
      type: object
      properties:
        new_email:
          type: string
          format: email
          title: Email
          maxLength: 254
      required:
      - new_email
    UsernameResetConfirmRequest:
      type: object
      properties:
        new_email:
          type: string
          format: email
          minLength: 1
          title: Email
          maxLength: 254
      required:
      - new_email
    VendorProfile:
      type: object
      description: Serializer for vendor profile
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        company_name:
          type: string
          maxLength: 100
        business_address:
          type: string
        tax_id:
          type: string
          nullable: true
          maxLength: 50
        business_license:
          type: string
          nullable: true
          maxLength: 100
        is_approved:
          type: boolean
          readOnly: true
        approved_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        approved_by:
          type: integer
          readOnly: true
          nullable: true
      required:
      - approved_at
      - approved_by
      - business_address
      - company_name
      - id
      - is_approved
      - user
    VendorProfileRequest:
      type: object
      description: Serializer for vendor profile
      properties:
        company_name:
          type: string
          minLength: 1
          maxLength: 100
        business_address:
          type: string
          minLength: 1
        tax_id:
          type: string
          nullable: true
          maxLength: 50
        business_license:
          type: string
          nullable: true
          maxLength: 100
      required:
      - business_address
      - company_name
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
