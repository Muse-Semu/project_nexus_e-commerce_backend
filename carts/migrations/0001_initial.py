# Generated by Django 4.2.7 on 2025-08-07 03:55

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("products", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Cart",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("session_key", models.CharField(blank=True, max_length=40, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="carts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "carts_cart",
            },
        ),
        migrations.CreateModel(
            name="Coupon",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=20, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "discount_type",
                    models.CharField(
                        choices=[
                            ("percentage", "Percentage"),
                            ("fixed", "Fixed Amount"),
                        ],
                        default="percentage",
                        max_length=10,
                    ),
                ),
                (
                    "discount_value",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                (
                    "minimum_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "maximum_discount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("usage_limit", models.PositiveIntegerField(blank=True, null=True)),
                ("used_count", models.PositiveIntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("valid_from", models.DateTimeField()),
                ("valid_until", models.DateTimeField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "carts_coupon",
                "indexes": [
                    models.Index(fields=["code"], name="carts_coupo_code_210ed5_idx"),
                    models.Index(
                        fields=["is_active"], name="carts_coupo_is_acti_91afcf_idx"
                    ),
                    models.Index(
                        fields=["valid_from", "valid_until"],
                        name="carts_coupo_valid_f_8a7b8a_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="CartCoupon",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("applied_at", models.DateTimeField(auto_now_add=True)),
                (
                    "cart",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="applied_coupon",
                        to="carts.cart",
                    ),
                ),
                (
                    "coupon",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="carts.coupon"
                    ),
                ),
            ],
            options={
                "db_table": "carts_cartcoupon",
            },
        ),
        migrations.CreateModel(
            name="CheckoutSession",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("session_key", models.CharField(blank=True, max_length=40, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                            ("expired", "Expired"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("shipping_address", models.TextField()),
                ("billing_address", models.TextField()),
                ("shipping_phone", models.CharField(max_length=20)),
                ("payment_method", models.CharField(default="chapa", max_length=50)),
                ("payment_status", models.CharField(default="pending", max_length=20)),
                (
                    "transaction_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("subtotal", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "discount_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "shipping_cost",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "tax_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("total_amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("expires_at", models.DateTimeField()),
                (
                    "cart",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="carts.cart"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "carts_checkoutsession",
                "indexes": [
                    models.Index(
                        fields=["user"], name="carts_check_user_id_3d6439_idx"
                    ),
                    models.Index(
                        fields=["session_key"], name="carts_check_session_622fa2_idx"
                    ),
                    models.Index(
                        fields=["status"], name="carts_check_status_c9d726_idx"
                    ),
                    models.Index(
                        fields=["payment_status"], name="carts_check_payment_b4c0c2_idx"
                    ),
                    models.Index(
                        fields=["created_at"], name="carts_check_created_392d32_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="CartItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(
                        default=1,
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "cart",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="carts.cart",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.product",
                    ),
                ),
                (
                    "variant",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="products.productvariant",
                    ),
                ),
            ],
            options={
                "db_table": "carts_cartitem",
                "indexes": [
                    models.Index(
                        fields=["cart"], name="carts_carti_cart_id_3ecc37_idx"
                    ),
                    models.Index(
                        fields=["product"], name="carts_carti_product_48caae_idx"
                    ),
                    models.Index(
                        fields=["variant"], name="carts_carti_variant_439d0a_idx"
                    ),
                ],
                "unique_together": {("cart", "product", "variant")},
            },
        ),
        migrations.AddIndex(
            model_name="cart",
            index=models.Index(fields=["user"], name="carts_cart_user_id_f43479_idx"),
        ),
        migrations.AddIndex(
            model_name="cart",
            index=models.Index(
                fields=["session_key"], name="carts_cart_session_e62e5b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="cart",
            index=models.Index(
                fields=["created_at"], name="carts_cart_created_2f713f_idx"
            ),
        ),
    ]
